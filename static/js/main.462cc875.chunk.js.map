{"version":3,"sources":["logo.svg","template/css/style.map","template/css/theme-default.map","texts.tsx","components/nav/nav.tsx","components/header/header.tsx","components/home/home.tsx","components/contact/contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","labels","navConf","links","path","name","activeClassName","genetareLink","position","key","to","NavComponent","className","id","href","style","color","fontSize","fontWeight","HeaderComponent","location","useLocation","link","find","pathname","useGetActivePathName","HomeComponent","src","logo","alt","target","rel","ContactComponent","action","method","noValidate","cols","rows","placeholder","resize","type","history","createBrowserHistory","Blog","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.462cc875.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/style.9722bd3a.map\";","module.exports = __webpack_public_path__ + \"static/media/theme-default.8ca13938.map\";","const labels = {\n  title: 'Smart Account',\n  default: '¯\\\\_(ツ)_/¯',\n}\n\nexport { labels }\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport { labels } from 'texts'\nimport { NavConf, Link } from './nav.types'\nimport 'template'\n\nconst navConf: NavConf = {\n  links: [\n    { path: '/home', name: 'Inicio' },\n    { path: '/blog', name: 'Blog' },\n    { path: '/contact', name: 'Contactenos' },\n  ],\n  activeClassName: 'active',\n}\n\nconst useGetActivePathName = (): string => {\n  const location = useLocation()\n  const link = navConf.links.find((link: Link) => link.path === location.pathname)\n  return link?.name || labels.default\n}\n\nconst genetareLink = (position: number): JSX.Element => {\n  return (\n    <NavLink\n      key={navConf.links[position].path}\n      to={navConf.links[position].path}\n      activeClassName={navConf.activeClassName}>\n      {navConf.links[position].name}\n    </NavLink>\n  )\n}\n\nconst NavComponent: React.FC = (): JSX.Element => {\n  return (\n    <header>\n      <div className=\"header-area\">\n        <div id=\"sticky-header\" className=\"main-header-area\">\n          <div className=\"container\">\n            <div className=\"header_bottom_border\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-xl-3 col-lg-2\">\n                  <div className=\"logo\">\n                    <a\n                      href=\"index.html\"\n                      style={{\n                        color: '#ffffff',\n                        fontSize: '30px',\n                        fontWeight: 'bold',\n                      }}>\n                      {labels.title}\n                    </a>\n                  </div>\n                </div>\n                <div className=\"col-xl-6 col-lg-7\">\n                  <div className=\"main-menu  d-none d-lg-block\">\n                    <nav>\n                      <ul id=\"navigation\">\n                        <li>{genetareLink(0)}</li>\n                        <li>{genetareLink(1)}</li>\n                        <li>{genetareLink(2)}</li>\n                      </ul>\n                    </nav>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"mobile_menu d-block d-lg-none\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport { NavComponent, useGetActivePathName }\n","import React from 'react'\nimport { useGetActivePathName } from 'components/index'\nimport 'template'\n\nconst HeaderComponent: React.FC = (): JSX.Element => {\n  return (\n    <div className=\"bradcam_area bradcam_bg_1\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"bradcam_text\">\n              <h3>{useGetActivePathName()}</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HeaderComponent }\n","import React from 'react'\nimport logo from 'logo.svg'\n\nconst HomeComponent: React.FC = (): JSX.Element => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          Learn React\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport { HomeComponent }\n","import React from 'react'\n\nconst ContactComponent: React.FC = (): JSX.Element => {\n  return (\n    <section className=\"contact-section\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <h2 className=\"text-center\">Ponte en contacto</h2>\n          </div>\n          <div className=\"col-lg-8\">\n            <form\n              className=\"form-contact contact_form\"\n              action=\"contact_process.php\"\n              method=\"post\"\n              id=\"contactForm\"\n              noValidate={false}>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <textarea\n                      className=\"form-control w-100\"\n                      name=\"message\"\n                      id=\"message\"\n                      cols={30}\n                      rows={9}\n                      // onFocus=\"this.placeholder = ''\"\n                      // onBlur=\"this.placeholder = 'Mensaje'\"\n                      placeholder=\" Mensaje\"\n                      style={{ resize: 'none' }}></textarea>\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control valid\"\n                      name=\"name\"\n                      id=\"name\"\n                      type=\"text\"\n                      // onFocus=\"this.placeholder = ''\"\n                      // onBlur=\"this.placeholder = 'Nombre'\"\n                      placeholder=\"Nombre\"></input>\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control valid\"\n                      name=\"email\"\n                      id=\"email\"\n                      type=\"email\"\n                      // onFocus=\"this.placeholder = ''\"\n                      // onBlur=\"this.placeholder = 'Correo'\"\n                      placeholder=\"Correo\"></input>\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group mt-3\">\n                <button\n                  type=\"submit\"\n                  className=\"button button-contactForm boxed-btn\">\n                  Enviar\n                </button>\n              </div>\n            </form>\n          </div>\n          <div className=\"col-lg-3 offset-lg-1\">\n            <div className=\"media contact-info\">\n              <span className=\"contact-info__icon\">\n                <i className=\"ti-home\"></i>\n              </span>\n              <div className=\"media-body\">\n                <h3>Cali, Colombia.</h3>\n                <p>\n                  Cra 1 #12-23 <br></br> Calima\n                </p>\n              </div>\n            </div>\n            <div className=\"media contact-info\">\n              <span className=\"contact-info__icon\">\n                <i className=\"ti-tablet\"></i>\n              </span>\n              <div className=\"media-body\">\n                <h3>+57 315 1234567</h3>\n                <p>\n                  Lunes a viernes <br></br> 9am a 6pm\n                </p>\n              </div>\n            </div>\n            <div className=\"media contact-info\">\n              <span className=\"contact-info__icon\">\n                <i className=\"fa fa-whatsapp\"></i>\n              </span>\n              <div className=\"media-body\">\n                <h3>+57 314 9876543</h3>\n                <p>\n                  Lunes a viernes <br></br> 9am a 6pm\n                </p>\n              </div>\n            </div>\n            <div className=\"media contact-info\">\n              <span className=\"contact-info__icon\">\n                <i className=\"ti-email\"></i>\n              </span>\n              <div className=\"media-body\">\n                <h3>contacto@SmartAccount.com</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport { ContactComponent }\n","import React from 'react'\nimport './App.css'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport {\n  NavComponent,\n  HeaderComponent,\n  HomeComponent,\n  ContactComponent,\n} from './components/index'\n\nconst history = createBrowserHistory()\n\nfunction Blog() {\n  return <h2>Blog</h2>\n}\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <Router history={history}>\n      <div>\n        <NavComponent />\n      </div>\n      <div>\n        <HeaderComponent />\n      </div>\n      <div>\n        <Switch>\n          <Route path=\"/home\">\n            <HomeComponent />\n          </Route>\n          <Route path=\"/blog\">\n            <Blog />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactComponent />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}